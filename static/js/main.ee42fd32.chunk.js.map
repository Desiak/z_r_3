{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","prevIndex","setPrevIndex","quoteIndex","setQuoteIndex","useEffect","fetch","then","response","ok","json","catch","error","console","className","onClick","disabled","quoteInd","Math","floor","random","length","getNewQuote","quote","author","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0KAgDeA,MA7Cf,WAEE,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA+BF,mBAAS,MAAxC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAmCJ,mBAAS,MAA5C,mBAAOK,EAAP,KAAmBC,EAAnB,KA8BA,OAlBAC,qBAAU,WACRC,MAAM,yIACLC,MAAK,SAACC,GACP,GAAIA,EAASC,GAEb,OADET,EAAQQ,GACHA,EAASE,UAGbH,MAAK,SAAAG,GACNV,EAAQU,MAETC,OAAM,SAACC,GACRC,QAAQD,MAAM,wBAAyBA,QAItC,IAGD,sBAAKE,UAAU,MAAf,UACC,2CACA,wBAAQA,UAAU,MAAMC,QAAS,WAxBlCX,EAAcH,IAwB0Ce,SAAUb,IAAaF,EAA9E,6BACA,wBAAQa,UAAU,MAAMC,QAAS,YAhClB,WAChBb,EAAaC,GACb,IAAMc,EAAUC,KAAKC,MAAMD,KAAKE,SAASrB,EAAKsB,QAC9CjB,EAAca,GA6ByBK,IAAtC,mBACA,4BAAIvB,GAAMA,EAAKI,IAAeJ,EAAKI,GAAYoB,QAC/C,4BAAIxB,GAAMA,EAAKI,IAAeJ,EAAKI,GAAYqB,aCzC9CC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACT,cAAC,EAAD,IACAJ,I","file":"static/js/main.ee42fd32.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n\n  const [data, setData] = useState(null);\n  const [prevIndex,setPrevIndex]=useState(null);\n  const [quoteIndex, setQuoteIndex]= useState(null);\n\n  const getNewQuote=()=>{\n    setPrevIndex(quoteIndex);\n    const quoteInd= Math.floor(Math.random()*data.length);\n    setQuoteIndex(quoteInd)\n  }\n\n  const getPrevQuote=()=>{\n    setQuoteIndex(prevIndex);\n  }\n\n  useEffect(() => {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\")\n    .then((response) => {\n    if (response.ok) {\n      setData(response)\n    return response.json();\n    }\n    \n    }).then(json=>{\n      setData(json)\n    })\n    .catch((error) => {\n    console.error(\"Error fetching data: \", error);\n    })\n  \n    \n  }, [])\n\n  return (\n    <div className=\"App\">\n     <h1>Zadanie 3</h1>\n     <button className=\"btn\" onClick={()=>{getPrevQuote()}} disabled={quoteIndex===prevIndex}>Poprzedni cytat</button>\n     <button className=\"btn\" onClick={()=>{getNewQuote()}}>Losuj</button>\n     <p>{data&&data[quoteIndex] && data[quoteIndex].quote}</p>\n     <p>{data&&data[quoteIndex] && data[quoteIndex].author}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n<App />,\nrootElement\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}